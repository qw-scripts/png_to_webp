name: Build and Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: png_to_webp
            asset_name: png_to_webp-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: png_to_webp
            asset_name: png_to_webp-linux-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: png_to_webp.exe
            asset_name: png_to_webp-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: png_to_webp
            asset_name: png_to_webp-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: png_to_webp
            asset_name: png_to_webp-macos-arm64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      
      - name: Install cross-compilation dependencies (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          if-no-files-found: error

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL
        run: echo "Release URL: ${{ steps.create_release.outputs.upload_url }}"

  upload_assets:
    name: Upload Assets
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - asset_name: png_to_webp-linux-amd64
            asset_content_type: application/octet-stream
          - asset_name: png_to_webp-linux-arm64
            asset_content_type: application/octet-stream
          - asset_name: png_to_webp-windows-amd64.exe
            asset_content_type: application/octet-stream
          - asset_name: png_to_webp-macos-amd64
            asset_content_type: application/octet-stream
          - asset_name: png_to_webp-macos-arm64
            asset_content_type: application/octet-stream

    steps:
      - name: Download release URL
        uses: actions/download-artifact@v4
        with:
          name: release_url
          
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}